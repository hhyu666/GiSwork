NAME,DESCRIPTION,TYPE,SUBTYPE,FIELD,ISEDITABLE,TRIGGERINSERT,TRIGGERDELETE,TRIGGERUPDATE,SCRIPTEXPRESSION,ERRORNUMBER,ERRORMESSAGE,EXCLUDECLIENTEVALUATION,ISENABLED,BATCH,SEVERITY,TAGS,CATEGORY,CHECKPARAMETERS
GetColour,Get colour from table,CALCULATION,,symbolcolor,True,True,False,True,"var colorkey = 14

// GetColour (For HV_TER) -- Medium voltage Line end
// GetColour (For HV_JNT) -- Medium voltage Cable joint
// GetColour  -- Medium Votlage Customer Installation
if ($feature.assetgroup == 963 || $feature.assetgroup == 955 || $feature.assetgroup == 972) {
 
 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){
     if (DomainName($feature,'voltagelimitmaxoperating') == '22 kV'){colorkey = 23}
     else{colorkey = 22}}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}

}

// GetColour (for HV_DIRS) -- Medium voltage Customer service point
if ($feature.assetgroup == 967) {
 
 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){colorkey = 22}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}

}

// GetColour (for LV_JNT) -- Low voltage Cable joint
// GetColour (for LV_DIR) -- Low voltage Customer service point
// GetColour (for LV_TER) -- Low voltage Line end
// GetColour (for LV_TER) -- Low Votlage Customer Installation
// GetColour (for LV_TER) -- Low voltage Busbar Tap
// GetColour (for LV_TER) -- Low voltage Tap-off
if ($feature.assetgroup == 954 || $feature.assetgroup == 966 || $feature.assetgroup == 962 || $feature.assetgroup == 971 || $feature.assetgroup == 977 || $feature.assetgroup == 958) {
 
 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){colorkey = 24}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}
 
}

// GetColour (For SK_TER) -- Solkor Line end
// GetColour (For SK_JNT) -- Solkor Cable joint
if ($feature.assetgroup == 756 || $feature.assetgroup == 754) {
 
 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){
 colorkey = 23}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 23}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 23}
 
}

if (DomainName($feature, 'assetgroup') == 'Medium voltage Cable joint' || DomainName($feature, 'assetgroup') == 'Medium voltage Tap-off'){

 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){
     if (DomainName($feature,'voltagelimitmaxoperating') == '22 kV'){colorkey = 23}
     else{colorkey = 22}}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}


}
if (DomainName($feature, ""assetgroup"") == ""Low voltage Cable joint"" || DomainName($feature, ""assetgroup"") == ""Low voltage Tap-off""){


 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){colorkey = 24}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}

}

// GetColour (For SK_JNT)1 -- Transmission Cable joint
// GetColour (For TR_TER) -- Transmission Line end
// GetColour -- Tranmission Cable defect
if ($feature.assetgroup == 957 || $feature.assetgroup == 965 || $feature.assetgroup == 784) { 
 //read color from table
 if (DomainName($feature,'lifecyclestatus') == ""INS""){
  if ($feature.voltagelimitmaxoperating == 33000 || $feature.voltagelimitmaxoperating == 66000){colorkey = 10}
  else if ($feature.voltagelimitmaxoperating == 132000){colorkey = 19}
  else{colorkey = 27}
 }else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 23}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 10}
 
}

if (DomainName($feature, 'assetgroup') == 'Medium voltage Survey point') {

 if (DomainName($feature,'lifecyclestatus') == ""INS""){colorkey = 22}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}


} 
else if (DomainName($feature, 'assetgroup') == 'Low voltage Survey point') {

 if (DomainName($feature,'lifecyclestatus') == ""INS""){colorkey = 24}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 28}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 12}


} 
else if (DomainName($feature, 'assetgroup') == 'Solkor Survey point') {

 if (DomainName($feature,'lifecyclestatus') == ""INS""){
 colorkey = 23}
 else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 23}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 23}


} 
else if (DomainName($feature, 'assetgroup') == 'Transmission Survey point') {

 if (DomainName($feature,'lifecyclestatus') == ""INS""){
  if ($feature.voltagelimitmaxoperating == 33000 || $feature.voltagelimitmaxoperating == 66000){colorkey = 10}
  else if ($feature.voltagelimitmaxoperating == 132000){colorkey = 19}
  else{colorkey = 27}
 }else if (DomainName($feature, 'lifecyclestatus') == ""PPA"" || DomainName($feature, 'lifecyclestatus') == ""PPM"" || DomainName($feature, 'lifecyclestatus') == ""PPR"" || DomainName($feature, 'lifecyclestatus') == ""PPX""){colorkey = 23}
 else if (DomainName($feature,'lifecyclestatus') == ""RES""){colorkey = 10}

}


var sql = 'OBJECTID = ' + colorkey
var result = First(Filter(FeatureSetByName($datastore,'NGISDD_Desktop_0926.NGISSD_SQLSERVICE.Colour',['*'],false),sql))

return result.Colour",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
GetSymbolID,Return appropriate symbolid for given attribute,CALCULATION,,symbolfid,True,True,False,True,"// SymbolID (For LV_TER) -- Low voltage Line end
if ($feature.assetgroup == 962) {
 return 10
}

// SymbolID (For HV_TER) -- Medium voltage Line end
if ($feature.assetgroup == 963) {
 return 68
}

// SymbolID (for HV_DIRS) -- Medium voltage Customer service point
if ($feature.assetgroup == 967) {
 var symid = 0
 
 if (DomainName($feature,""statusinterconnection"") == ""Yes""){symid = 2}
 else{symid = 1}
 
 return symid
}

// SymbolID (for HV_JNT) -- Medium voltage Cable joint
if ($feature.assetgroup == 955) {
 var symid=21
 
 if ($feature.transitionjointtype == ""1""){
 if ($feature.weakjointtype == 1){symid =21}
 else if($feature.weakjointtype ==2){symid =22}
 else if($feature.weakjointtype ==3){symid =23}
 else if($feature.weakjointtype ==4){symid =24}
 else{symid =25}
 }else{
 if ($feature.weakjointtype == 1){symid =26}
 else if($feature.weakjointtype ==2){symid =27}
 else if($feature.weakjointtype ==3){symid =28}
 else if($feature.weakjointtype ==4){symid =29}
 else{symid =30}}
 
 return symid
}

// SymbolID (for LV_JNT) -- Low voltage Cable joint
if ($feature.assetgroup == 954) {
 var symid=31
 
 if ($feature.weakjointtype == 1){symid =31}
 else if($feature.weakjointtype ==2){symid =32}
 else if($feature.weakjointtype ==3){symid =33}
 else if($feature.weakjointtype ==4){symid =34}
 else{symid =35}
 
 return symid
}

// SymbolID (for LV_DIRS) -- Low voltage Customer service point
if ($feature.assetgroup == 966) {
 var symid = 0
 
 if (DomainName($feature,""supplytype"") == ""Single-Core Cable""){symid = 5}
 else if (DomainName($feature,""supplytype"") == ""Transit Block""){symid = 4}
 else{symid = 3}
 
 return symid
}

// SymbolID (For SK_TER) -- Solkor Line end
if ($feature.assetgroup == 756) {
 return 69
}

// SymbolID (For SK_JNT) -- Solkor Cable joint
if ($feature.assetgroup == 754) {
 return 71
}

if (DomainName($feature, 'assetgroup') == 'Medium voltage Survey point') {
    return 43
} else if (DomainName($feature, 'assetgroup') == 'Low voltage Survey point') {
    return 44
} else if (DomainName($feature, 'assetgroup') == 'Solkor Survey point') {
    return 45
} else if (DomainName($feature, 'assetgroup') == 'Transmission Survey point') {
    return 46
} 
// SymbolID (For SK_HUB) -- Solkor Network hub
if ($feature.assetgroup == 772) {
 return 47
}

// SymbolID (For TR_TER) -- Transmission Line end
if ($feature.assetgroup == 965) {
 return 70
}

// SymbolID (for TR_JNT) - m -- Transmission Cable joint
if ($feature.assetgroup == 957) {
 var symid = 30
 
 if ($feature.assettype == 850 || $feature.assettype == 851) {
 symid = 57
 }
 
 return symid
}",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
GetAngle (For LV_TER),Get angle between point and intercept line,CALCULATION,Low voltage Line end,symbolrotation,True,True,False,True,"// Find the first intersecting line from the intersecting class
var lineClass = FeatureSetByName($datastore, ""NGISDD_Desktop_0926.NGISSD_SQLSERVICE.MapLine"", [""objectid""], true)
var line = First(Intersects(lineClass, $feature))

// If no feature was found, return the original value
if (line == null)
   return $feature.symbolrotation

// Buffer the point by a small amount to extract the segment
var search = Extent(Buffer($feature, .01, ""meter""))
var segment = Clip(line, search)[""paths""][0]

// Get angle of line using the start and end vertex
return Angle(segment[0], segment[-1])",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
GetAngle (For SK_TER),Get angle between point and intercept line,CALCULATION,Solkor Line end,symbolrotation,True,True,False,True,"// Find the first intersecting line from the intersecting class
var lineClass = FeatureSetByName($datastore, ""NGISDD_Desktop_0926.NGISSD_SQLSERVICE.MapLine"", [""objectid""], true)
var line = First(Intersects(lineClass, $feature))

// If no feature was found, return the original value
if (line == null)
   return $feature.symbolrotation

// Buffer the point by a small amount to extract the segment
var search = Extent(Buffer($feature, .01, ""meter""))
var segment = Clip(line, search)[""paths""][0]

// Get angle of line using the start and end vertex
return Angle(segment[0], segment[-1])",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
GetAngle (For HV_TER),Get angle between point and intercept line,CALCULATION,Medium voltage Line end,symbolrotation,True,True,False,True,"// Find the first intersecting line from the intersecting class
var lineClass = FeatureSetByName($datastore, ""NGISDD_Desktop_0926.NGISSD_SQLSERVICE.MapLine"", [""*""], true)
var line = First(Intersects(lineClass, $feature))

// If no feature was found, return the original value
if (line == null)
   return $feature.symbolrotation

// Buffer the point by a small amount to extract the segment
var search = Extent(Buffer($feature, .01, ""meter""))
var segment = Clip(line, search)[""paths""][0]

// Get angle of line using the start and end vertex
return Angle(segment[0], segment[-1])",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
GetAngle (For TR_TER),Get angle between point and intercept line,CALCULATION,Transmission Line end,symbolrotation,True,True,False,True,"//Modify the attribute rule
// Find the first intersecting line from the intersecting class
var lineClass = FeatureSetByName($datastore, ""NGISDD_Desktop_0926.NGISSD_SQLSERVICE.MapLine"", [""objectid""], true)
var line = First(Intersects(lineClass, $feature))

// If no feature was found, return the original value
if (line == null)
   return $feature.symbolrotation

// Buffer the point by a small amount to extract the segment
var search = Extent(Buffer($feature, .01, ""meter""))
var segment = Clip(line, search)[""paths""][0]

// Get angle of line using the start and end vertex
return Angle(segment[0], segment[-1])",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
MapJunction Cal01,Calcuate X corrdinate (3 d.p.) and save in Grid X1 Coordinate field,CALCULATION,,envelopex1,True,True,False,True,Geometry($feature).x,,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
MapJunction Cal02,Calcuate y corrdinate of point feature (3 d.p.) and save in Grid Y1 Coordinate field,CALCULATION,,envelopey1,True,True,False,True,Geometry($feature).y,,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
MapJunction Cal03,"Base on C_SURETYPE to assign is shallow, name product and distancesafetyrequirement",CALCULATION,,,True,True,False,True,"/*776 TR Survey point
  777 MV Survey point
  778 LV Survey point
  779 SK Survey point
*/
var validAssetGroup = [776, 777, 778, 779]
var assetGroup = $feature.ASSETGROUP
if (includes(validAssetGroup, assetGroup)) {
    var environment = $feature.environment
    var nameproductvariant = $feature.surveypointtype
    var survetypeTable = FeatureSetByName($datastore, ""NGISDD_Desktop_0926.NGISSD_SQLSERVICE.C_SURVETYPE"",['*'],false)
    var targetUpdateRows = Filter(survetypeTable, ""nameproductvariant = @nameproductvariant AND ENVIRONMENT = @environment"")
    if(count(targetUpdateRows)==1){
        var updateObject = {}
        var featuredepthValue = $feature.dimdepth
        var featureIsshallow =  $feature.isshallow
        var featureNameproduct = $feature.nameproduct
        var featureShallowValue = $feature.distancesafetyrequirement
        var targetUpdateRow = First(targetUpdateRows)
        var targetUpateShallowValue = targetUpdateRow.distancesafetyrequirement
        var targetUpateNameproduct = targetUpdateRow.nameproduct
        var targetUpdateIsshallow = """"
        if(featureShallowValue != targetUpateShallowValue  ){
            updateObject[""distancesafetyrequirement""] = targetUpateShallowValue
        }
        if(featuredepthValue < targetUpateShallowValue){
            var targetUpdateIsshallow = ""Yes""
            if(featureIsshallow != targetUpdateIsshallow){
                updateObject[""isshallow""] = targetUpdateIsshallow
            }
        }else{
            var targetUpdateIsshallow = ""No""
            if(featureIsshallow!= targetUpdateIsshallow){
                updateObject[""isshallow""] = targetUpdateIsshallow
            }
        }
        if(featureNameproduct != targetUpateNameproduct){
            updateObject[""nameproduct""] = targetUpateNameproduct
        }
        for(var i in updateObject){}
        if(IsEmpty(i) != true){
            return{
                ""result"":{
                    'attributes':updateObject
                }
            }
        }
    }
}",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Post processing commissioning date,Update the commissioning date and the date flag,CALCULATION,,,True,True,False,True,"var rep_date = $feature.datecommissionedrep;
var year = Number(Mid(rep_date ,0,4))
var month = Number(Mid(rep_date ,4,2))
var day  = Number(Mid(rep_date ,6,2))
var big_month = [1,3,5,7,8,10,12]
var small_month = [4,6,9,11]
if (year >= 1900) {
    if (includes(big_month, month) == true) {
        if ((day > 0) && (day < 32)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (includes(small_month, month) == true) {
        if ((day > 0) && (day < 31)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (month == 2) {
        if (year % 4 == 0) {
            if ((day > 0) && (day < 30)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else{
                var date = Date(year, (month - 1),1,8,0,0,0)
                var acc = 2
            }
        }
        else {
            if ((day > 0) && (day < 29)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else {
                var date = Date(year, (month - 1), 1, 8,0,0,0)
                var acc = 2
            }
        }
    }
    else if (month == 0 && day == 0){
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
    else {
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
}
else {
    var date = Null
    var acc = 0
}
return {
    'result': {
        ""attributes"": {
            ""datecommissioned"": ToLocal(date),
            ""datecommissionedacc"" : acc
        }
    }
}",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Post processing installed date and date flag,Update installed date and date flag,CALCULATION,,,True,True,False,True,"var rep_date = $feature.dateinstalledrep;
var year = Number(Mid(rep_date ,0,4))
var month = Number(Mid(rep_date ,4,2))
var day  = Number(Mid(rep_date ,6,2))
var big_month = [1,3,5,7,8,10,12]
var small_month = [4,6,9,11]
if (year >= 1900) {
    if (includes(big_month, month) == true) {
        if ((day > 0) && (day < 32)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (includes(small_month, month) == true) {
        if ((day > 0) && (day < 31)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (month == 2) {
        if (year % 4 == 0) {
            if ((day > 0) && (day < 30)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else{
                var date = Date(year, (month - 1),1,8,0,0,0)
                var acc = 2
            }
        }
        else {
            if ((day > 0) && (day < 29)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else {
                var date = Date(year, (month - 1), 1, 8,0,0,0)
                var acc = 2
            }
        }
    }
    else if (month == 0 && day == 0){
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
    else {
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
}
else {
    var date = Null
    var acc = 0
}
return {
    'result': {
        ""attributes"": {
            ""dateinstalled"": ToLocal(date),
            ""dateinstalledacc"" : acc
        }
    }
}",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Post processing retired date and date flag,Update retired date and date flag,CALCULATION,,,True,True,False,True,"var rep_date = $feature.dateretiredrep;
var year = Number(Mid(rep_date ,0,4))
var month = Number(Mid(rep_date ,4,2))
var day  = Number(Mid(rep_date ,6,2))
var big_month = [1,3,5,7,8,10,12]
var small_month = [4,6,9,11]
if (year >= 1900) {
    if (includes(big_month, month) == true) {
        if ((day > 0) && (day < 32)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (includes(small_month, month) == true) {
        if ((day > 0) && (day < 31)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (month == 2) {
        if (year % 4 == 0) {
            if ((day > 0) && (day < 30)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else{
                var date = Date(year, (month - 1),1,8,0,0,0)
                var acc = 2
            }
        }
        else {
            if ((day > 0) && (day < 29)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else {
                var date = Date(year, (month - 1), 1, 8,0,0,0)
                var acc = 2
            }
        }
    }
    else if (month == 0 && day == 0){
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
    else {
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
}
else {
    var date = Null
    var acc = 0
}
return {
    'result': {
        ""attributes"": {
            ""dateretired"": ToLocal(date),
            ""dateretiredacc"" : acc
        }
    }
}",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Post processing surveyingz date and date flag,Update surveyingz date and date flag,CALCULATION,,,True,True,False,True,"var rep_date = $feature.datesurveyingzrep;
var year = Number(Mid(rep_date ,0,4))
var month = Number(Mid(rep_date ,4,2))
var day  = Number(Mid(rep_date ,6,2))
var big_month = [1,3,5,7,8,10,12]
var small_month = [4,6,9,11]
if (year >= 1900) {
    if (includes(big_month, month) == true) {
        if ((day > 0) && (day < 32)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (includes(small_month, month) == true) {
        if ((day > 0) && (day < 31)) {
            var date = Date(year, (month - 1), (day), 8,0,0,0)
            var acc = 1
        }
        else {
            var date = Date(year, (month - 1), 1, 8,0,0,0)
            var acc = 2
        }
    }
    else if (month == 2) {
        if (year % 4 == 0) {
            if ((day > 0) && (day < 30)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else{
                var date = Date(year, (month - 1),1,8,0,0,0)
                var acc = 2
            }
        }
        else {
            if ((day > 0) && (day < 29)) {
                var date = Date(year, (month - 1), day,8,0,0,0)
                var acc = 1
            }
            else {
                var date = Date(year, (month - 1), 1, 8,0,0,0)
                var acc = 2
            }
        }
    }
    else if (month == 0 && day == 0){
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
    else {
        var date = Date(year, 0, 1,8,0,0,0)
        var acc = 3
    }
}
else {
    var date = Null
    var acc = 0
}
return {
    'result': {
        ""attributes"": {
            ""datesurveyingz"": ToLocal(date),
            ""datesurveyingzacc"" : acc
        }
    }
}",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
MapJunction_Cal_08,Base on the life cycle status to update the UN life cycle status,CALCULATION,,statenetworklifecyclenormal,True,True,False,True,"if (DomainName($feature, ""lifecyclestatus"") == ""INS"") {
  return 256
} if (DomainName($feature, ""lifecyclestatus"") == ""PPR"" ||  DomainName($feature, ""lifecyclestatus"") == ""PPX""  ) {
  return 32
}  if (DomainName($feature, ""lifecyclestatus"") == ""RES"" || DomainName($feature, ""lifecyclestatus"") == ""SP"" ) {
  return 1
} if ( DomainName($feature, ""lifecyclestatus"") == ""PPA"" || DomainName($feature, ""lifecyclestatus"") == ""PPM"" ) {
  return 2
}else {
   return 0
}",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
